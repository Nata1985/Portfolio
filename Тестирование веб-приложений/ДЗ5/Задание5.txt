Урок 5. Google Chrome DevTools
Проанализируйте сайт через Chrome Developer Tools. Сайт можно взять любой: над которым вы работаете, сайт вашего работодателя и так далее. Если у вас нет сайта, то выберите, например, из следующих:
https://apache.org/ — лёгкий уровень сложности. Сайт простой, содержит минимум разных ресурсов, с хорошей и читаемой вёрсткой.
https://gb.ru — средний уровень сложности, но мы его разбирали на лекции, так что сложности не возникнут.
https://mail.ru или https://yandex.ru — средний уровень сложности.
https://mail.google.com — если у вас есть аккаунт, почта в Google или что-то аналогичное. Повышенный уровень сложности.
Что надо сделать:
1. Elements: отредактировать DOM, добавить/удалить элементы. Отредактировать CSS-свойства.
2. Console: выписать ошибки (Errors) и/или предупреждения (Warnings), зависит от количества найденного. Одну из ошибок, если они есть, описать как баг — заголовок, окружение, шаги, ОР, ФР и прочее.
3. Sources: определить, какие ресурсы загружаются сайтом. Сделать prettyprint для одного из CSS/HTML/JS-файлов (значок { }).
4. Network:
1. Определить время загрузки страницы.
2. Выяснить, какие элементы грузятся дольше всего.
3. Для самой страницы (HTML-файла) выяснить HTTP-заголовки запроса и ответа.
4. Узнать, сколько времени клиент ждал ответа — параметр Waiting (TTFB).
5. Посмотреть загрузку сайта на медленном интернете.
6. Сделать скриншоты и посмотреть процесс загрузки.
5. Performance: запустить профайлинг и затем посмотреть в Summary, на что потрачено время.
6. Memory: сделать Heap Snapshot и посмотреть, сколько памяти заняла страница. Можно переключиться с Summary на Statistics.
7. Application: проверить и «почистить» сookie.
8. Security: проверить, всё ли подключено через HTTPS, нет ли проблем с сертификатами.
Формат сдачи: набор скриншотов и описания багов в формате PDF в одном файле.